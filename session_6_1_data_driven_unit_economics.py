# -*- coding: utf-8 -*-
"""Session 6.1: Data driven. Unit Economics

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1THW2mkkJ1zegrfozebVOC4UPdGUzG_v8

Import Libraries
"""

import pandas as pd

"""Extract data"""

google_sheet_id = '10OGbaywwMIqKgnPGy8VDvpBVtjyqln47iYa2lFhI9Mw'
url = 'https://docs.google.com/spreadsheets/d/' + google_sheet_id + '/export?format=xlsx'
monthly_expense = pd.read_excel(url, sheet_name="Sheet1")

google_sheet_id = '1qayqML1zCKdmtzutkcy9LWvE6xFRm6TGBEVkHHJKIuE'
url = 'https://docs.google.com/spreadsheets/d/' + google_sheet_id + '/export?format=xlsx'
new_customer = pd.read_excel(url, sheet_name="Sheet1")

google_sheet_id = '1c_WihqTZCQvNgxzmd-OwhR9i5diwtfxXVLyMn8R-Lp4'
url = 'https://docs.google.com/spreadsheets/d/' + google_sheet_id + '/export?format=xlsx'
payroll = pd.read_excel(url, sheet_name="Sheet1")

google_sheet_id = '1AZOIThOV4P-0eYDge53ZwumVkfkHoYPWxst3k3Bv87c'
url = 'https://docs.google.com/spreadsheets/d/' + google_sheet_id + '/export?format=xlsx'
daily_market = pd.read_excel(url, sheet_name="Sheet1")

google_sheet_id = '1by8tPHwOnq3uKYK2E7sA9VBUYoPM4p1Rnrm_Ss9cyHI'
url = 'https://docs.google.com/spreadsheets/d/' + google_sheet_id + '/export?format=xlsx'
life_span = pd.read_excel(url, sheet_name="Sheet1")

"""1.CAC: Customer Acquistion Cost"""

month_expense_3 = monthly_expense[monthly_expense["month"] == '2023-03']

"""1.1. Software marketing expense"""

month_expense_SME = month_expense_3[month_expense_3["item"] == 'Salesforce']

crm_expense= month_expense_3[month_expense_3["item"] == 'Salesforce']['amount'].sum()
crm_expense

"""CAC = total acquistion cost/ nb of new customer

-> Software

-> payroll = sales + marketing

-> Daily marketing

Payroll code
"""

payroll_3 = payroll[payroll["month"] == '2023-03']

payroll_tac = payroll_3[(payroll_3["department"] == 'Sales') | (payroll_3["department"] == "Marketing")]
payroll_tac

payroll_expense = payroll_tac['paid'].sum()
payroll_expense

"""Daily market code"""

daily_market_3 = daily_market[(daily_market["date"] >= '2023-03-01') & (daily_market["date"] <= '2023-03-31')]
daily_market_3

daily_market_expense = daily_market_3['spending'].sum()
daily_market_expense

TAC = payroll_expense + crm_expense + daily_market_expense
TAC

"""number of new customer"""

payment_03 = new_customer[(new_customer["date"] >= '2023-03-01') & (new_customer["date"] <= '2023-03-31')]

nb_new_customer = payment_03[payment_03['new_customer'] == 1]['customer_id'].nunique()
nb_new_customer

cac = round(TAC/nb_new_customer)
cac

"""ARPU"""

sum_receipt = payment_03['receipt_amount'].sum()
sum_receipt

nb_customer = payment_03['customer_id'].nunique()
nb_customer

ARPU = round(sum_receipt/nb_customer)
ARPU

"""COGS

Software expense
"""

production_software = ['AWS Hosting', 'Google Cloud Storage', 'Atlassian Jira']
production_expense = month_expense_3[month_expense_3['item'].isin(production_software)]['amount'].sum()
production_expense

shared_software =['Zoom', 'Slack']
shared_expense = month_expense_3[month_expense_3['item'].isin(shared_software)]['amount'].sum()*0.6
shared_expense

software_expense = production_expense + shared_expense
software_expense

"""Production salary"""

production_department = ['Engineering']
production_salary = payroll_3[payroll_3['department'].isin(production_department)]['paid'].sum()
production_salary

COGS = software_expense + production_salary
COGS

"""Gross Margin = Doanh thu - giá vốn/ doanh thu"""

gross_margin = (sum_receipt - COGS)/ sum_receipt*100
gross_margin

"""LTV - life time value = ARPU * Avg_lifetime*gross_margin"""

life_span['lifespan_days'] = (pd.to_datetime(life_span['churn_date']) - pd.to_datetime(life_span['start_date'])).dt.days
life_date

avg_life_span = life_span['lifespan_days'].mean()
avg_life_span

life_span_month = avg_life_span/30
life_span_month

ltv = ARPU*life_span_month*gross_margin
ltv

"""LTV/CAC = Life time value
Số tiền khách hàng đem lại gấp 174 lần số tiền thu hút khách hàng
"""

ratio = ltv/cac
ratio